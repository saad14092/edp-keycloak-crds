{
  "id": "v1.edp.epam.com/v1@KeycloakRealmIdentityProvider",
  "apiVersion": "v1.edp.epam.com/v1",
  "kind": "KeycloakRealmIdentityProvider",
  "description": "KeycloakRealmIdentityProvider is the Schema for the keycloak realm identity provider API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "markdownDescription": "**apiVersion** (string)\n\nAPIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "markdownDescription": "KeycloakRealmIdentityProvider: KeycloakRealmIdentityProvider is the Schema for the keycloak realm identity provider API.\n\n**apiVersion** (string)\n\nAPIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n**kind** (string)\n\nKind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n**metadata** (object)\n\nundefined\n\n**spec** (object)\n\nKeycloakRealmIdentityProviderSpec defines the desired state of KeycloakRealmIdentityProvider.\n\n**status** (object)\n\nKeycloakRealmIdentityProviderStatus defines the observed state of KeycloakRealmIdentityProvider.\n\n"
    },
    "metadata": {
      "type": "object",
      "markdownDescription": "**metadata** (object)\n\n"
    },
    "spec": {
      "description": "KeycloakRealmIdentityProviderSpec defines the desired state of KeycloakRealmIdentityProvider.",
      "properties": {
        "addReadTokenRoleOnCreate": {
          "description": "AddReadTokenRoleOnCreate is a flag to add read token role on create.",
          "type": "boolean"
        },
        "alias": {
          "description": "Alias is a alias of identity provider.",
          "type": "string"
        },
        "authenticateByDefault": {
          "description": "AuthenticateByDefault is a flag to authenticate by default.",
          "type": "boolean"
        },
        "config": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Config is a map of identity provider configuration.\nMap key is a name of configuration property, map value is a value of configuration property.\nAny value can be a reference to k8s secret, in this case value should be in format $secretName:secretKey.",
          "example": {
            "clientId": "provider-client",
            "clientSecret": "$clientSecret:secretKey"
          },
          "type": "object"
        },
        "displayName": {
          "description": "DisplayName is a display name of identity provider.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled is a flag to enable/disable identity provider.",
          "type": "boolean"
        },
        "firstBrokerLoginFlowAlias": {
          "description": "FirstBrokerLoginFlowAlias is a first broker login flow alias.",
          "type": "string"
        },
        "linkOnly": {
          "description": "LinkOnly is a flag to link only.",
          "type": "boolean"
        },
        "mappers": {
          "description": "Mappers is a list of identity provider mappers.",
          "items": {
            "properties": {
              "config": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Config is a map of identity provider mapper configuration.",
                "nullable": true,
                "type": "object"
              },
              "identityProviderAlias": {
                "description": "IdentityProviderAlias is a identity provider alias.",
                "type": "string"
              },
              "identityProviderMapper": {
                "description": "IdentityProviderMapper is a identity provider mapper.",
                "type": "string"
              },
              "name": {
                "description": "Name is a name of identity provider mapper.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "nullable": true,
          "type": "array"
        },
        "providerId": {
          "description": "ProviderID is a provider ID of identity provider.",
          "type": "string"
        },
        "realmRef": {
          "description": "RealmRef is reference to Realm custom resource.",
          "properties": {
            "kind": {
              "default": "KeycloakRealm",
              "description": "Kind specifies the kind of the Keycloak resource.",
              "enum": [
                "KeycloakRealm",
                "ClusterKeycloakRealm"
              ],
              "type": "string"
            },
            "name": {
              "description": "Name specifies the name of the Keycloak resource.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "storeToken": {
          "description": "StoreToken is a flag to store token.",
          "type": "boolean"
        },
        "trustEmail": {
          "description": "TrustEmail is a flag to trust email.",
          "type": "boolean"
        }
      },
      "required": [
        "alias",
        "config",
        "enabled",
        "providerId",
        "realmRef"
      ],
      "type": "object",
      "markdownDescription": "**spec** (object)\n\nKeycloakRealmIdentityProviderSpec defines the desired state of KeycloakRealmIdentityProvider."
    },
    "status": {
      "description": "KeycloakRealmIdentityProviderStatus defines the observed state of KeycloakRealmIdentityProvider.",
      "properties": {
        "failureCount": {
          "format": "int64",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "markdownDescription": "**status** (object)\n\nKeycloakRealmIdentityProviderStatus defines the observed state of KeycloakRealmIdentityProvider."
    }
  },
  "name": "com.epam.edp.v1.v1.KeycloakRealmIdentityProvider"
}
